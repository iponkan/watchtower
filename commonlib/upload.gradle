apply plugin: "maven-publish"
apply plugin: 'com.jfrog.bintray'

group = "com.sonicers"
version = "0.0.13"

def gitUrl = 'https://github.com/sonicers/commonlib.git' // project git

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
    }
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/commonlib-release.aar")
            artifact sourcesJar
            artifact javadocJar
            groupId group
            artifactId 'commonlib'
            version this.version

            pom.withXml {

                // Define this explicitly if using implementation or api configurations
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    Properties propertyReader = new Properties()
    propertyReader.load(new FileInputStream("${projectDir}${File.separator}jcenter.properties"))
    user = propertyReader.bintrayUser.toString()
    key = propertyReader.bintrayApiKey.toString()

    publications = ['Production']
    configurations = ['archives']
    override = true
    pkg {
        repo = "maven"               //跟JCenter创建的Maven仓库名字保持一致
        name = "commonlib"                //发布到JCenter上的项目名字
        description = "Android commonlib for fast develop"
        publish = true
        publicDownloadNumbers = true
        licenses = ["MIT"]
        vcsUrl = gitUrl
        version {
            name = this.version
            desc = "commonlib ${this.version}"
            released = new Date()
            vcsTag = this.version
        }
    }
}